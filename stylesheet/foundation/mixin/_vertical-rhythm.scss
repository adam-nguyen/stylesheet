//
// #Vertical-rhythm
//

// @desc - Vertical-rhythmに対応した`font-size`(px)と`line-height`(単位なし)を返すmixinです。
// @type Mixin
// @prop {Map} $fs($my-base-font-sizes) -
// @requires {Map} $my-base-font-sizes - rootのフォントサイズと行の高さを定義しているマップです。
// @requires {Map} $my-breakpoints - ブレイクポイントを管理するためのmapです。
//
// @example scss - Usage
// .foo {
//     @include my-font-size($my-base-font-sizes);
// }
//
// @example css - CSS output
// .foo {
//     font-size: 14px;
//     line-height: 1.715;
// }
//
// @media screen and (min-width: 1000px) {
//     .foo {
//         font-size: 16px;
//         line-height: 1.75;
//     }
// }
//
@mixin my-font-size($fs: $my-base-font-sizes) {
    $bp: $my-breakpoints;
    @each $name, $unit in $fs {
        @if $name == "base" {
             font-size: nth($unit, 1);
             line-height: nth($unit, 3);
        } @else {
            @if map-has-key($bp, $name) {
                @media #{map-get($bp, $name)} {
                    font-size: nth($unit, 1);
                    line-height: nth($unit, 3);
                }
            }
        }
    }
}

// @desc - Vertical Rhythmに対応した余白を返します。
// @type Mixin
// @prop {String} $prop - プロパティ名を渡します。
// @prop {Number} $vr(1) - 指定したい行数を渡します。
// @prop {String} $important(false) - `!important`を指定したい場合は文字列`important`を渡します。
// @requires {Map} $my-base-font-sizes - rootのフォントサイズと行の高さを定義しているマップです。
// @requires {Map} $my-breakpoints - ブレイクポイントを管理するためのmapです。
//
// @example scss - Usage
// .foo {
//   @include my-vertical-rhythm(margin-top, 1);
//   @include my-vertical-rhythm(margin-bottom, 1);
// }
//
// @example css - CSS output
// .foo {
//   margin-top: 24px;
//   margin-bottom: 24px;
// }
// @media screen and (min-width: 1000px) {
//   .foo {
//     margin-top: 28px;
//   }
// }
// @media screen and (min-width: 1000px) {
//   .foo {
//     margin-bottom: 28px;
//   }
// }
//
@mixin my-vertical-rhythm($prop, $vr: 1, $important: false) {
    @if ($important == "important") {
        $important: unquote("!important");
    } @else {
        $important: null;
    }
    $bp: $my-breakpoints;
    @each $name, $unit in $my-base-font-sizes {
        @if $name == "base" {
            #{$prop}: nth($unit, 2) * $vr $important;
        } @else {
            @if map-has-key($bp, $name) {
                @media #{map-get($bp, $name)} {
                    #{$prop}: nth($unit, 2) * $vr $important;
                }
            }
        }
    }
}