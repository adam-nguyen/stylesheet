/**
 * #Push
 */

/**
 * レスポンシブに対応した`push`のヘルパークラスです。
 * http://csswizardry.com/2015/08/bemit-taking-the-bem-naming-convention-a-step-further/
 * https://github.com/csswizardry/frcss/blob/master/_trumps.widths.scss
 */

 [class*="u-push"] {
    position: relative;
}

// 取得したいカラム数をリスト形式で指定します。
// 例えば`1 2`を指定すると1/1, 1/2, 2/2の`push`を取得できます。
$push-cols: 12 !default;

// @param {Number} $cols - 取得したいカラム数を指定します。
// @param {String} $breakpoint(null) - ブレイクポイント用のキーワードを付与します。
// @requires {List} $push-cols - 取得するカラム数を定義しています。
@mixin push($cols, $breakpoint: null) {
    // 変数もしくはリストを受け取り、取得したいカラム数を格納します。
    // denominatorは分母の意味。
    @each $denominator in $cols {
        // 格納した値の数だけ繰り返して、その回数を変数に格納します。
        // numeratorは分子の意味。
        @for $numerator from 1 through $denominator {
            // .u- + 分子/分母 + ブレイクポイントという命名規則。
            // バックスラッシュ`\`でスラッシュ`/`をエスケープします。
            .u-push#{$numerator}\/#{$denominator}#{$breakpoint} {
                // `percentage()`関数でパーセンテージに変換します。
                left: percentage($numerator / $denominator) !important;
            }
        }
    }
}

// ブレイクポイントのないclassを生成します。
@include push($push-cols);

// ブレイクポイント付きのclassを生成します。
// @requires {Map} $breakpoints - ブレイクポイントを定義しています。
// マップに定義されたkeyとvalueのペアの数だけ繰り返します。
// 取得したkeyは変数に格納します。
@each $breakpoint in map-keys($breakpoints) {
    // `map-get()`関数でブレイクポイント用のvalueを取得します。
    @media #{map-get($breakpoints, $breakpoint)} {
        // @とkeyを第二引数に渡します。
        @include push($push-cols, \@#{$breakpoint})
    }
}