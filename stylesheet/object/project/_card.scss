/**
 * #Card
 */
$card-gap: 1rem !default;
$card-padding-y: 2em !default;
$card-padding-x: 1em !default;
$card-border: 1px solid colors(ui, light) !default;
$card-round: $base-round !default;
$card-round-head: $card-round $card-round 0 0 !default;
$card-round-foot: 0 0 $card-round $card-round !default;

/**
 * カード型のオブジェクトです。
 *
 * <div class="p-card">
 *   <img class="p-card__image-top">
 *   <div class="p-card__body">
 *     <h2 class="p-card__title"></h2>
 *     <p class="p-card__text"></p>
 *   </div>
 *   <ul class="p-card__list">
 *     <li class="p-card__item"></li>
 *     <li class="p-card__item"></li>
 *   </ul>
 *   <div class="p-card__foot">
 *     <p class="p-card__text"></p>
 *   </div>
 * </div>
 */
.p-card {
    margin-bottom: $card-gap;
    border: $card-border;
    border-radius: $card-round;
}

.p-card__body {
    padding: $card-padding-y $card-padding-x;
    > :last-child {
        margin-bottom: 0;
    }
}

.p-card__head {
    padding: $card-padding-x;
    border-radius: $card-round-head;
    > :last-child {
        margin-bottom: 0;
    }
}

.p-card__foot {
    padding: $card-padding-x;
    border-top: $card-border;
    border-radius: $card-round-foot;
    > :last-child {
        margin-bottom: 0;
    }
}

.p-card__image-top {
    border-radius: $card-round-head;
}

.p-card__image-bottom {
    border-radius: $card-round-foot;
}

.p-card__title {
    margin-top: 0;
}

.p-card__text:last-child {
    margin-bottom: 0;
}

.p-card__list {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

.p-card__item {
    padding: $card-padding-x;
    border-top: $card-border;
}

.p-card__link {
    display: block;
    margin: -$card-padding-x;
    padding: $card-padding-x;
}


/**
 * Masonryのようなタイル状のレイアウトができるラッパーオブジェクトです。
 * IE10以上限定で使用可能です。
 *
 * <div class="p-card-column1/2@md p-card-column1/3@lg">
 *   <div class="p-card"></div>
 *   <div class="p-card"></div>
 *   <div class="p-card"></div>
 * </div>
 */
[class^="p-card-column"] {
    column-count: 1;
    column-gap: $card-gap;
    > .p-card {
        display: inline-block;
        width: 100%;
    }
}

// 取得したいカラム数をリスト形式で指定します。
// 例えば`1 2`を指定すると1/1, 1/2, 2/2の`width`を取得できます。
$card-cols: 1 2 3 !default;

// @param {Number} $cols - 取得したいカラム数を指定します。
// @param {String} $breakpoint(null) - ブレイクポイント用のキーワードを付与します。
// @requires {List} $card-cols - 取得するカラム数を定義しています。
@mixin card($cols, $breakpoint: null) {
    @each $col in $cols {
        @for $i from 1 through $col {
            .p-card-column#{$i}\/#{$col}#{$breakpoint} {
                column-count: #{$col};
            }
        }
    }
}

// ブレイクポイントのないclassを生成します。
@include card($card-cols);

// ブレイクポイント付きのclassを生成します。
// @requires {Map} $breakpoints - ブレイクポイントを定義しています。
@each $name, $breakpoint in $breakpoints {
    @media #{$breakpoint} {
        @include card($card-cols, \@#{$name})
    }
}